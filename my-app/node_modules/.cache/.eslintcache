[{"D:\\Dolgaim\\Programozás\\Deployment\\Greenbay\\GreenbayFrontend\\my-app\\src\\index.js":"1","D:\\Dolgaim\\Programozás\\Deployment\\Greenbay\\GreenbayFrontend\\my-app\\src\\reportWebVitals.js":"2","D:\\Dolgaim\\Programozás\\Deployment\\Greenbay\\GreenbayFrontend\\my-app\\src\\App.js":"3","D:\\Dolgaim\\Programozás\\Deployment\\Greenbay\\GreenbayFrontend\\my-app\\src\\components\\Home.js":"4","D:\\Dolgaim\\Programozás\\Deployment\\Greenbay\\GreenbayFrontend\\my-app\\src\\components\\Login.js":"5","D:\\Dolgaim\\Programozás\\Deployment\\Greenbay\\GreenbayFrontend\\my-app\\src\\components\\Navbar.js":"6","D:\\Dolgaim\\Programozás\\Deployment\\Greenbay\\GreenbayFrontend\\my-app\\src\\components\\Profile.js":"7","D:\\Dolgaim\\Programozás\\Deployment\\Greenbay\\GreenbayFrontend\\my-app\\src\\components\\SinglePageProduct.js":"8","D:\\Dolgaim\\Programozás\\Deployment\\Greenbay\\GreenbayFrontend\\my-app\\src\\components\\UploaderProfile.js":"9","D:\\Dolgaim\\Programozás\\Deployment\\Greenbay\\GreenbayFrontend\\my-app\\src\\components\\Product.js":"10"},{"size":314,"mtime":1686656488506,"results":"11","hashOfConfig":"12"},{"size":375,"mtime":1684355086892,"results":"13","hashOfConfig":"12"},{"size":5963,"mtime":1687214077494,"results":"14","hashOfConfig":"12"},{"size":2261,"mtime":1687214071502,"results":"15","hashOfConfig":"12"},{"size":3310,"mtime":1686656488492,"results":"16","hashOfConfig":"12"},{"size":1057,"mtime":1686656488492,"results":"17","hashOfConfig":"12"},{"size":19191,"mtime":1686656488493,"results":"18","hashOfConfig":"12"},{"size":5026,"mtime":1687214075038,"results":"19","hashOfConfig":"12"},{"size":2220,"mtime":1687214072887,"results":"20","hashOfConfig":"12"},{"size":623,"mtime":1686656488493,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p8zlwi",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},"D:\\Dolgaim\\Programozás\\Deployment\\Greenbay\\GreenbayFrontend\\my-app\\src\\index.js",[],[],"D:\\Dolgaim\\Programozás\\Deployment\\Greenbay\\GreenbayFrontend\\my-app\\src\\reportWebVitals.js",[],[],"D:\\Dolgaim\\Programozás\\Deployment\\Greenbay\\GreenbayFrontend\\my-app\\src\\App.js",["59","60","61"],[],"import React from 'react'\r\nimport { useState, useEffect } from \"react\"\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\"\r\nimport './style.scss';\r\nimport Home from './components/Home';\r\nimport Login from './components/Login';\r\nimport Navbar from './components/Navbar';\r\nimport Profile from './components/Profile';\r\nimport SinglePageProduct from './components/SinglePageProduct';\r\nimport UploaderProfile from './components/UploaderProfile';\r\n\r\nfunction App() {\r\n\r\n  /* Login section */\r\n  const [loginData, setLoginData] = useState([])\r\n\r\n  const [formData, setFormData] = useState({\r\n      username: '',\r\n      password: ''\r\n  })\r\n\r\n  function handleChange(e){\r\n      const name = e.target.name;\r\n      const value = e.target.value;\r\n\r\n      setFormData({\r\n          ...formData,\r\n          [name]: value\r\n      })\r\n  }\r\n\r\n  function login(e){\r\n    e.preventDefault()\r\n\r\n    fetch('https://greenbaybackend-production.up.railway.app/login', {\r\n    method: 'POST',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(formData)\r\n    })\r\n    .then(res => res.json())\r\n    .then(data => setLoginData(data))\r\n    .catch(err => console.log(\"Error: \" + err))\r\n}\r\n\r\n  /* Register section */\r\n  const [registerData, setRegisterData] = useState({\r\n      username: '',\r\n      email: '',\r\n      password: ''\r\n  })\r\n\r\n  function handleRegister(e){\r\n      const name = e.target.name;\r\n      const value = e.target.value;\r\n\r\n      setRegisterData({\r\n          ...registerData,\r\n          [name]: value\r\n      })\r\n  }\r\n\r\n  async function register(e){\r\n    e.preventDefault()\r\n    const res = await fetch('https://greenbaybackend-production.up.railway.app/register', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(registerData)\r\n    })\r\n    const data = res.json()\r\n    if(res.status === 200){\r\n      const loginForm = document.querySelector('#loginForm')\r\n      const registerForm = document.querySelector('#registerForm')\r\n      loginForm.style.display = 'flex'\r\n      registerForm.style.display = 'none'\r\n      loginForm.reset()\r\n      registerForm.reset()\r\n    }\r\n  }\r\n\r\n  /* Displaying products section */\r\n  const [products, setProducts] = useState()\r\n\r\n  async function displayAllProducts(){\r\n    const res = await fetch('https://greenbaybackend-production.up.railway.app/products/all')\r\n    const data = await res.json()\r\n    setProducts(data)\r\n    document.title = 'Greenbay'\r\n  }\r\n\r\n  /* Searchbar */\r\n  const [searchResult, setSearchResult] = useState()\r\n\r\n  async function search(){\r\n    const searchBar = document.querySelector('.search-bar').value\r\n    const sortOptions = document.querySelector('#sort-options').value\r\n    const res = await fetch(`https://greenbaybackend-production.up.railway.app/search?keyword=${searchBar}&sort=${sortOptions}`)\r\n    const data = await res.json()\r\n    setSearchResult(data)\r\n  }\r\n\r\n  /* User's profile section */\r\n  const [userProfile, setUserProfile] = useState()\r\n\r\n  async function displayProfileInformation(){\r\n    const res = await fetch('https://greenbaybackend-production.up.railway.app/profile', {\r\n      headers: {\r\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\r\n      }\r\n    })\r\n    const data = await res.json()\r\n    setUserProfile(data)\r\n    document.title = `${data.username} | Greenbay`\r\n  }\r\n\r\n  /* Updating balance section */\r\n  async function uploadFunds(fund){\r\n    const res = await fetch('https://greenbaybackend-production.up.railway.app/balance', {\r\n    method: 'POST',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\r\n    },\r\n    body: JSON.stringify({balance: fund})\r\n    })\r\n    const data = await res.json()\r\n    displayProfileInformation()\r\n}\r\n\r\n  /* Purchase item */\r\n  async function purchase(productId){\r\n    const res = await fetch(`https://greenbaybackend-production.up.railway.app/purchase?productId=${productId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\r\n      }\r\n    })\r\n    const data = await res.json()\r\n    document.querySelector('.alert-title').innerText = data.message\r\n  }\r\n\r\n  /* Place a bid */\r\n  async function placeBid(productId){\r\n    const bidAmount = document.getElementById('bidAmount').value\r\n    const res = await fetch(`https://greenbaybackend-production.up.railway.app/bid?productId=${productId}`, {\r\n      method: 'POST',\r\n      headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\r\n      },\r\n      body: JSON.stringify({amount: bidAmount})\r\n    })\r\n    const data = await res.json()\r\n    document.querySelector('.alert-title').innerText = data.message\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Navbar userProfile={userProfile} search={search} />}>\r\n          <Route index element={<Home products={products} displayAllProducts={displayAllProducts} searchResult={searchResult} displayProfileInformation={displayProfileInformation} search={search} />} />\r\n          <Route path=\"login\" element={<Login login={login} loginData={loginData} handleChange={handleChange} formData={formData} register={register} handleRegister={handleRegister} registerData={registerData}/>} />\r\n          <Route path=\"profile\" element={<Profile products={products} displayAllProducts={displayAllProducts} userProfile={userProfile} displayProfileInformation={displayProfileInformation} uploadFunds={uploadFunds}/>} />\r\n          <Route path=\"products/:productId\" element={<SinglePageProduct products={products} purchase={purchase} placeBid={placeBid} />}/>\r\n          <Route path=\"user/:username\" element={<UploaderProfile />}/>\r\n        </Route>\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\Dolgaim\\Programozás\\Deployment\\Greenbay\\GreenbayFrontend\\my-app\\src\\components\\Home.js",["62"],[],"import { Link } from \"react-router-dom\"\r\nimport { useEffect } from \"react\"\r\nimport Product from './Product';\r\n\r\nexport default function Home(props) {\r\n\r\n    useEffect(() => {\r\n        props.displayAllProducts()\r\n      }, [])\r\n\r\n    let displayItems\r\n\r\n    /* Displays uploaded products on \"Home Page\" and re-renders if the user sorts the items */\r\n    if(props.searchResult){\r\n\r\n        displayItems = props.searchResult.map(function(searchResult){\r\n            return <div key={searchResult.productId}>\r\n            <Link to={`/products/${searchResult.productId}`}>\r\n            <Product description={searchResult.description} \r\n            title={searchResult.name} \r\n            image={searchResult.photoUrl} \r\n            purchasePrice={searchResult.purchasePrice} \r\n            startingPrice={searchResult.startingPrice} />\r\n            <p>More information</p>\r\n            </Link>\r\n            </div>\r\n        })\r\n        \r\n    } else if(props.products){\r\n\r\n        displayItems = props.products.map(function(product){\r\n            return <div key={product.id}>\r\n            <Link to={`/products/${product.id}`}>\r\n            <Product description={product.description} \r\n            title={product.name} \r\n            image={product.photoUrl} \r\n            purchasePrice={product.purchasePrice} \r\n            startingPrice={product.startingPrice} />\r\n            <p>More information</p>\r\n            </Link>\r\n            </div>\r\n        })\r\n\r\n    }\r\n\r\n    /* Gets the selected sorting option and uploads it to the URL, re-renders the uploaded products on \"Home Page\" in the selected sorting option */\r\n    function sortItems(){\r\n        props.search()\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n\r\n            {/* Sorting items section */}\r\n            <div className=\"sort-items\">\r\n            <select id=\"sort-options\" onChange={sortItems}>\r\n                <option value=\"\">Sort by default</option>\r\n                <option value=\"asc\">Sort by ascending</option>\r\n                <option value=\"desc\">Sort by descending</option>\r\n            </select>\r\n            </div>\r\n\r\n            {/* Display uploaded products on \"Home Page\" */}\r\n            <div className=\"products\">\r\n                {displayItems}\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\Dolgaim\\Programozás\\Deployment\\Greenbay\\GreenbayFrontend\\my-app\\src\\components\\Login.js",["63","64"],[],"import { useState, useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\nexport default function Login(props) {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    document.title = 'Login | Greenbay'\r\n \r\n  /* Checks if the login datas are correct, and then navigates to the logged in user's profile, saves \"token\" and \"username\" to localstorage */  \r\n  useEffect(()=> {\r\n    if(!props.loginData.message && props.formData.username && props.formData.password){\r\n        localStorage.setItem(\"token\", props.loginData.token)\r\n        localStorage.setItem(\"username\", props.loginData.username)\r\n        navigate('/profile');\r\n    }\r\n}, [props.loginData])\r\n\r\n    /* Displays register form and resets the login form */\r\n    function displayRegister(){\r\n        const loginForm = document.querySelector('#loginForm')\r\n        const registerForm = document.querySelector('#registerForm')\r\n        loginForm.style.display = 'none'\r\n        registerForm.style.display = 'flex'\r\n        loginForm.reset()\r\n        document.title = 'Register | Greenbay'\r\n    }\r\n\r\n    /* Displays login form and resets the register form */\r\n    function displayLogin(){\r\n        const loginForm = document.querySelector('#loginForm')\r\n        const registerForm = document.querySelector('#registerForm')\r\n        loginForm.style.display = 'flex'\r\n        registerForm.style.display = 'none'\r\n        registerForm.reset()\r\n        document.title = 'Login | Greenbay'\r\n    }\r\n\r\n    return (\r\n        <section className=\"login\">\r\n\r\n            {/* Landing Page image, titles, displays error message if there is any trying to log in or register*/}\r\n            <div className=\"login-header\">\r\n            </div>\r\n            <div className=\"login-form\">\r\n            <h1>GreenBay</h1>\r\n            <h3>Welcome to Greenbay</h3>\r\n            <h4 className=\"error-message\" style={props.loginData.message ? {display: 'block'} : {display: 'none'}}>{props.loginData.message}</h4>\r\n\r\n            {/* Login form */}\r\n            <form onSubmit={props.login} method=\"POST\" autoComplete=\"off\" id=\"loginForm\">\r\n                <input name=\"username\" type=\"text\" placeholder=\"Username\" onChange={props.handleChange} value={props.formData.name}/>\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" onChange={props.handleChange} value={props.formData.name}/>\r\n                <button type=\"submit\">Login</button>\r\n                <small>Are you new here? <span onClick={displayRegister}>Create an account</span></small>\r\n            </form>\r\n\r\n            {/* Register form */}\r\n            <form onSubmit={props.register} id=\"registerForm\" autoComplete=\"off\">\r\n                <input name=\"email\" type=\"text\" placeholder=\"Email Address\" onChange={props.handleRegister} value={props.registerData.name}/>\r\n                <input name=\"username\" type=\"text\" placeholder=\"Username\" onChange={props.handleRegister} value={props.registerData.name}/>\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" onChange={props.handleRegister} value={props.registerData.name}/>\r\n                <button type=\"submit\">Sign Up</button>\r\n                <small>Already have an account? <span onClick={displayLogin}>Sign In</span></small>\r\n            </form>\r\n\r\n        </div>\r\n        </section>\r\n    )\r\n}","D:\\Dolgaim\\Programozás\\Deployment\\Greenbay\\GreenbayFrontend\\my-app\\src\\components\\Navbar.js",[],[],"D:\\Dolgaim\\Programozás\\Deployment\\Greenbay\\GreenbayFrontend\\my-app\\src\\components\\Profile.js",["65","66","67","68","69","70"],[],"import { useState, useEffect } from \"react\"\r\nimport { Link, useNavigate } from \"react-router-dom\"\r\n\r\nexport default function Profile(props){\r\n\r\n    useEffect(() => {\r\n        props.displayProfileInformation()\r\n    }, [])\r\n\r\n    const [productData, setProductData] = useState(\r\n        {\r\n            name: \"\",\r\n            description: \"\",\r\n            photoUrl: \"\",\r\n            purchasePrice: \"\",\r\n            startingPrice: \"\",\r\n            forBid: false,\r\n            expiresAt: \"\",\r\n            createdAt: \"\",\r\n            owner: \"\",\r\n            uploader: \"\"\r\n        }\r\n    )\r\n\r\n    const [uploadErrorMessage, setUploadErrorMessage] = useState()\r\n\r\n    const navigate = useNavigate()\r\n\r\n    /* Save the input data to \"productData\" state */\r\n    function handleItem(e){\r\n        const name = e.target.name\r\n        const value = e.target.value\r\n        const checked = e.target.checked\r\n\r\n        setProductData({\r\n            ...productData,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    \r\n    /* User displays \"Create new item\" form */\r\n    function displayForm(){\r\n        const productForm = document.querySelector('#addProductForm')\r\n        const addProduct = document.querySelector('.add-item-animation')\r\n        productForm.style.display = 'flex'\r\n        addProduct.style.display = 'none'\r\n    }\r\n\r\n    /* User uploads a product */\r\n    async function uploadProduct(e){\r\n        e.preventDefault()\r\n        const res = await fetch('http://localhost:8080/products', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\r\n        },\r\n        body: JSON.stringify(productData)\r\n        })\r\n        const data = await res.json()\r\n        props.displayAllProducts()\r\n        props.displayProfileInformation()\r\n        setUploadErrorMessage(data.message)\r\n        if(res.status === 201){\r\n            resetUploadForm()\r\n            navigate(`/products/${data.productId}`)\r\n        }\r\n    }\r\n\r\n    /* User clicks on \"Edit\" button and enters \"Editing mode\" */\r\n    const [editMode, setEditMode] = useState(false)\r\n    async function editButton(){\r\n        setEditMode(prevState => !prevState)\r\n        const deleteBtn = document.querySelectorAll('.delete-btn')\r\n        const editBtn = document.querySelectorAll('.edit-btn')\r\n        deleteBtn.forEach(item => {\r\n            item.style.display = editMode === true ? 'none' : 'block'\r\n        });\r\n        editBtn.forEach(item => {\r\n            item.style.display = editMode === true ? 'none' : 'block'\r\n        });\r\n    }\r\n\r\n    /* User gets the data of the product he wants to edit */\r\n    async function editProduct(id){\r\n        const res = await fetch(`http://localhost:8080/products/${id}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\r\n            },\r\n            })\r\n            const data = await res.json()\r\n            displayForm()\r\n            document.getElementById('addProductForm').scrollIntoView({\r\n                behavior: \"smooth\"\r\n            })\r\n            document.getElementById(\"title\").value = data.name\r\n            document.getElementById(\"description\").value = data.description\r\n            document.getElementById(\"photoUrl\").value = data.photoUrl\r\n            document.getElementById(\"purchasePrice\").value = data.purchasePrice\r\n            document.getElementById(\"startingPrice\").value = data.startingPrice\r\n            document.getElementById(\"addItem\").style.display = \"none\"\r\n            document.querySelector(\"#checkboxBidding\").style.display = 'none'\r\n            document.querySelector(\"#checkboxLabel\").style.display = 'none'\r\n            document.getElementById(\"editItem\").style.display = \"block\"\r\n            document.getElementById(\"editItem\").style.display = \"block\"\r\n            if(data.startingPrice){\r\n                document.getElementById(\"startingPrice\").style.display = 'block'\r\n                document.querySelector(\".expiresAt\").style.display = 'block'\r\n                document.querySelector(\"#checkboxBidding\").style.display = 'none'\r\n            } else {\r\n                document.getElementById(\"startingPrice\").style.display = 'none'\r\n                document.querySelector(\".expiresAt\").style.display = 'none'\r\n            }\r\n            let url = new URL(window.location.href)\r\n            url.searchParams.set(\"id\", id)\r\n            window.history.replaceState({}, \"\", url.toString())\r\n    }\r\n\r\n    /* User edits the products */\r\n    async function editItem(){\r\n        const url = new URL(window.location.href)\r\n        const id = url.searchParams.get('id')\r\n        let inputValues = {\r\n            name: document.getElementById(\"title\").value,\r\n            description: document.getElementById(\"description\").value,\r\n            photoUrl: document.getElementById(\"photoUrl\").value,\r\n            startingPrice: document.getElementById(\"startingPrice\").value,\r\n            purchasePrice: document.getElementById(\"purchasePrice\").value,\r\n            expiresAt: document.querySelector('.expiresAt').value\r\n        }\r\n        const res = await fetch(`http://localhost:8080/products/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\r\n            },\r\n            body: JSON.stringify(inputValues)\r\n            })\r\n            const data = await res.json()\r\n            navigate(`/products/${id}`)\r\n            document.getElementById(\"addItem\").style.display = \"block\"\r\n            document.getElementById(\"editItem\").style.display = \"none\"\r\n    }\r\n\r\n    /* User deletes a product */\r\n    let deletedProduct\r\n\r\n    function deleteAlert(id){\r\n        document.querySelector('.delete-alert').style.display = 'block'\r\n        document.querySelector('.alert-overlay').style.display = 'block'\r\n        deletedProduct = id\r\n        window.scrollTo({\r\n            top: 0,\r\n            behavior: 'smooth'\r\n        })\r\n    }\r\n\r\n    function cancelDelete(){\r\n        document.querySelector('.delete-alert').style.display = 'none'\r\n        document.querySelector('.alert-overlay').style.display = 'none'\r\n    }\r\n\r\n    function confirmDelete(){\r\n        document.querySelector('.delete-alert').style.display = 'none'\r\n        document.querySelector('.alert-overlay').style.display = 'none'\r\n        deleteProduct(deletedProduct)\r\n    }\r\n\r\n    function deleteProduct(){\r\n        fetch(`http://localhost:8080/products/${deletedProduct}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem(\"token\")}`\r\n        }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            props.displayAllProducts()\r\n            props.displayProfileInformation()\r\n        })\r\n        .catch(err => console.log(\"Error: \" + err))\r\n    }\r\n\r\n    /* User resets the form and hides it */\r\n    function resetUploadForm(){\r\n        const productForm = document.querySelector('#addProductForm')\r\n        const addProduct = document.querySelector('.add-item-animation')\r\n        productForm.style.display = 'none'\r\n        addProduct.style.display = 'flex'\r\n        document.getElementById(\"addItem\").style.display = \"block\"\r\n        document.getElementById(\"editItem\").style.display = \"none\"\r\n        const url = new URL(window.location.href)\r\n        window.history.replaceState({}, \"\", url.origin + url.pathname)\r\n        productForm.reset()\r\n    }\r\n\r\n    /* Display the users uploaded products */\r\n    let uploadedProducts\r\n    let uploadedProductsCount\r\n    let balance\r\n    let activeBids\r\n    let displayTransactions\r\n    const emptyProducts = document.querySelector('.empty-products')\r\n    const emptyBids = document.querySelector('.empty-bids')\r\n\r\n    const [visible, setVisible] = useState(4)\r\n    function showMoreItems(){\r\n        const btn = document.querySelector('.show-more')\r\n\r\n        if(visible === 4){\r\n            setVisible(props.userProfile.uploadedProducts.length)\r\n            btn.innerText = \"Show less items\"\r\n        } else {\r\n            setVisible(4)\r\n            btn.innerText = \"Show all items\"\r\n        }\r\n\r\n        const deleteBtn = document.querySelectorAll('.delete-btn')\r\n        const editBtn = document.querySelectorAll('.edit-btn')\r\n        deleteBtn.forEach(item => {\r\n            item.style.display = editMode === false ? 'none' : 'block'\r\n        });\r\n        editBtn.forEach(item => {\r\n            item.style.display = editMode === false ? 'none' : 'block'\r\n        });\r\n    }\r\n\r\n    if(props.userProfile && emptyProducts){\r\n\r\n        uploadedProducts = props.userProfile.uploadedProducts.slice(0, visible).map(function(item){\r\n            return <div className=\"product\" key={item.productId}>\r\n                <Link to={`/products/${item.productId}`}>\r\n                <div className=\"product-img\">\r\n                    <img src={item.photoUrl} alt=\"\" />\r\n                </div>\r\n                <div className=\"product-text\">\r\n                <h3>{item.name}</h3>\r\n                </div>\r\n                </Link>\r\n                <button className=\"delete-btn\" onClick={() => deleteAlert(item.productId)}><i className=\"fa-solid fa-xmark\"></i></button>\r\n                <button className=\"edit-btn\" onClick={() => editProduct(item.productId)}><i className=\"fa-solid fa-gear\"></i></button>\r\n            </div>\r\n        })\r\n\r\n        if(props.userProfile.uploadedProductsCount > 0){\r\n            emptyProducts.style.display = \"none\"\r\n        } else {\r\n            emptyProducts.style.display = \"flex\"\r\n        }\r\n\r\n        activeBids = props.userProfile.usersActiveBids.slice(0, visible).map(function(item){\r\n            return <div className=\"product\" key={item.productId}>\r\n                <Link to={`/products/${item.productId}`}>\r\n                <div className=\"product-img\">\r\n                    <img src={item.productPhotoUrl} alt=\"\" />\r\n                </div>\r\n                <div className=\"product-text\">\r\n                <h3>{item.productName}</h3>\r\n                </div>\r\n                </Link>\r\n            </div>\r\n        })\r\n\r\n        if(props.userProfile.usersActiveBids.length > 0){\r\n            emptyBids.style.display = \"none\"\r\n        } else {\r\n            emptyBids.style.display = \"flex\"\r\n        }\r\n\r\n        displayTransactions = props.userProfile.transactions.map(function(item){\r\n            return <tr key={item.transactionId}>\r\n                <td><i className={item.transaction === true ? \"fa-solid fa-arrow-up\" : \"fa-solid fa-arrow-down\"}></i></td>\r\n                <td>{item.name}</td>\r\n                <td>${item.amount}</td>\r\n            </tr>\r\n        })\r\n\r\n        uploadedProductsCount = props.userProfile.uploadedProductsCount\r\n        balance = props.userProfile.balance.balance\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(uploadedProductsCount > 4){\r\n            document.querySelector('.show-more-container').style.display = 'block'\r\n        } else {\r\n            document.querySelector('.show-more-container').style.display = 'none'\r\n        }\r\n    }, [uploadedProductsCount])\r\n\r\n    /* User displays the fund options */\r\n    function displayFunds(){\r\n        const displayFunds = document.querySelector('.add-funds')\r\n        const cancelItem = document.querySelector('.cancel-fund')\r\n        const addItem = document.querySelector('.add-item-animation')\r\n        displayFunds.style.display = displayFunds.style.display == 'flex' ? 'none' : 'flex'\r\n        cancelItem.style.display = cancelItem.style.display == 'flex' ? 'none' : 'flex'\r\n        addItem.style.display = addItem.style.display == 'none' ? 'flex' : 'none'\r\n    }\r\n\r\n    let fund\r\n\r\n    function fundsAlert(amount){\r\n        document.querySelector('.cancel').style.display = 'inline-block'\r\n        document.querySelector('.confirm').style.display = 'inline-block'\r\n        document.querySelector('.funds-alert').style.display = 'block'\r\n        document.querySelector('.alert-overlay').style.display = 'block'\r\n        fund = amount\r\n    }\r\n\r\n    function cancelFunds(){\r\n        document.querySelector('.funds-alert').style.display = 'none'\r\n        document.querySelector('.alert-overlay').style.display = 'none'\r\n    }\r\n\r\n    function confirmFunds(){\r\n        document.querySelector('.alert-title').innerText = 'Thank you for your purchase!'\r\n        document.querySelector('.cancel').style.display = 'none'\r\n        document.querySelector('.confirm').style.display = 'none'\r\n        props.uploadFunds(fund)\r\n        setTimeout(function(){\r\n            document.querySelector('.funds-alert').style.display = 'none'\r\n            document.querySelector('.alert-overlay').style.display = 'none'\r\n        }, 1000)\r\n    }\r\n\r\n    /* User toggles \"Auction mode\" */\r\n    function toggleBidding(e){\r\n        const name = e.target.name\r\n        const checked = e.target.checked\r\n        const checkbox = document.querySelector('#checkboxBidding')\r\n        const startingPrice = document.querySelector('#startingPrice')\r\n        const expiresAt = document.querySelector('.expiresAt')\r\n        startingPrice.style.display = checkbox.checked ? 'block' : 'none'\r\n        expiresAt.style.display = checkbox.checked ? 'block' : 'none'\r\n        setProductData({\r\n            ...productData,\r\n            [name]: checked\r\n        })\r\n    }\r\n\r\n    function logout(){\r\n        localStorage.clear()\r\n        navigate('/')\r\n        window.location.reload()\r\n    }\r\n\r\n    return(\r\n        <section className=\"profile\">\r\n\r\n            {/* Two main buttons on Profile page */}\r\n            <div className=\"container\">\r\n            <h3 className=\"balance\">Your balance: ${balance}</h3>\r\n            <div className=\"add-item-animation btn-grad\">\r\n                <div onClick={displayForm} className=\"btn-grad\">\r\n                    <h1>Create new item</h1>\r\n                    <h1>+</h1>\r\n                </div>\r\n                <div onClick={displayFunds} className=\"btn-gradient\">\r\n                    <h1>Add funds to your balance</h1>\r\n                    <h1>+</h1>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Product upload form */}\r\n            <form onSubmit={uploadProduct} autoComplete=\"off\" id=\"addProductForm\">\r\n\r\n                <h4 className=\"error-message\" style={uploadErrorMessage ? {display: 'block'} : {display: 'none'}}>{uploadErrorMessage}</h4>\r\n\r\n                <div className=\"upload-product\">\r\n                    <div className=\"input-fields\">\r\n                    <input type=\"text\" name=\"name\" onChange={handleItem} placeholder=\"Title\" id=\"title\"/>\r\n                    <input type=\"text\" name=\"description\" onChange={handleItem} placeholder=\"Description\" id=\"description\"/>\r\n                    <input type=\"text\" name=\"photoUrl\" onChange={handleItem} placeholder=\"Photo\" id=\"photoUrl\"/>\r\n                    <input type=\"number\" name=\"purchasePrice\" onChange={handleItem} placeholder=\"Purchase Price\" step=\".01\" id=\"purchasePrice\"/>\r\n                    </div>\r\n\r\n                    <label htmlFor=\"forBid\" id=\"checkboxLabel\">Do you want to list your item for auction?</label>\r\n                    <input type=\"checkbox\" name=\"forBid\" onClick={(e) => toggleBidding(e)} id=\"checkboxBidding\" />\r\n\r\n                    <div className=\"auction\">\r\n                        <input type=\"number\" name=\"startingPrice\" onChange={handleItem} placeholder=\"Starting Price\" step=\".01\" id=\"startingPrice\" />\r\n\r\n                        <select className=\"expiresAt\" name=\"expiresAt\" onChange={handleItem}>\r\n                            <option value=\"two_minutes\">Two Minutes</option>\r\n                            <option value=\"one_day\">1 Day</option>\r\n                            <option value=\"three_days\">3 Days</option>\r\n                            <option value=\"one_week\">1 Week</option>\r\n                            <option value=\"two_tweeks\">2 Weeks</option>\r\n                            <option value=\"one_month\">1 Month</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"button-container\">\r\n                    <button type=\"button\" onClick={resetUploadForm}>Cancel</button>\r\n                    <button type=\"submit\" id=\"addItem\">Add Item</button>\r\n                    <button type=\"button\" id=\"editItem\" onClick={editItem}>Edit Item</button>\r\n                </div>\r\n\r\n            </form>\r\n\r\n            {/* Add funds section */}\r\n            <div className=\"alert-overlay\"></div>\r\n            <div className=\"funds-alert\">\r\n                <h1 className=\"alert-title\">Are you sure you want to transfer money to your account?</h1>\r\n                <button className=\"cancel\" onClick={cancelFunds}>Cancel</button>\r\n                <button className=\"confirm\" onClick={confirmFunds}>Confirm</button>\r\n            </div>\r\n\r\n            <div className=\"add-funds\">\r\n                <div onClick={() => fundsAlert(10)}>$10</div>\r\n                <div onClick={() => fundsAlert(50)}>$50</div>\r\n                <div onClick={() => fundsAlert(100)}>$100</div>\r\n            </div>\r\n            <h4 className=\"cancel-fund\" onClick={displayFunds}>Cancel</h4>\r\n\r\n            {/* Displays the amount of the user's uploaded products and can enter \"Editing mode\" */}\r\n            <div className=\"profile-text\">\r\n                <h1>Your Items ({uploadedProductsCount})</h1>\r\n                <button onClick={editButton}><i className=\"fa-solid fa-gear\"></i>Edit</button>\r\n            </div>\r\n\r\n            {/* Displays the user's uploaded products */}\r\n            <div className=\"products\">\r\n                {uploadedProducts}\r\n                <div className=\"empty-products\">\r\n                    <h1>There are no active bids currently.</h1>\r\n                </div>\r\n            </div>\r\n            <div className=\"show-more-container\">\r\n                <button className=\"show-more\" onClick={showMoreItems}>Show more items</button>\r\n            </div>\r\n            \r\n\r\n            <h1>Active bids</h1>\r\n            <div className=\"products\">\r\n                {activeBids}\r\n                <div className=\"empty-bids\">\r\n                    <h1>There are no active bids currently.</h1>\r\n                </div>\r\n            </div>\r\n\r\n            <h1>Transactions</h1>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Transaction</th>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                    </tr>\r\n                    {displayTransactions}\r\n                </tbody>\r\n            </table>\r\n\r\n            <div className=\"alert-overlay\"></div>\r\n            <div className=\"delete-alert\">\r\n                <h1 className=\"alert-title\">Are you sure you want to delete this item?</h1>\r\n                <button className=\"cancel\" onClick={cancelDelete}>Cancel</button>\r\n                <button className=\"confirm\" onClick={confirmDelete}>Confirm</button>\r\n            </div>\r\n\r\n            <button className=\"logout\" onClick={logout}>Logout</button>\r\n\r\n            </div>\r\n        </section>\r\n    )\r\n}","D:\\Dolgaim\\Programozás\\Deployment\\Greenbay\\GreenbayFrontend\\my-app\\src\\components\\SinglePageProduct.js",["71","72","73","74"],[],"import { useState, useEffect } from 'react';\r\nimport { Link, useParams, useNavigate } from 'react-router-dom'\r\nimport Product from './Product';\r\nimport { Swiper, SwiperSlide } from 'swiper/react'\r\nimport 'swiper/css'\r\nimport Login from './Login';\r\n\r\nexport default function SingleProduct(props){\r\n\r\n    const { productId } = useParams()\r\n    const [productPage, setProductPage] = useState()\r\n\r\n    /* When the user clicks on a product, it collects that product's data and saves it to productPage state */\r\n    async function singlePageProduct(){\r\n        const res = await fetch(`https://greenbaybackend-production.up.railway.app/products/${productId}`)\r\n        const data = await res.json()\r\n        setProductPage(data)\r\n        document.title = `${data.name} | Greenbay`\r\n    }\r\n    \r\n    useEffect(() => {\r\n        singlePageProduct()\r\n    }, [productId])\r\n\r\n    let moreItems\r\n\r\n    if(productPage != undefined){\r\n    moreItems = productPage.randomProducts.map(function(item){\r\n        return <SwiperSlide key={item.productId}>\r\n        <div>\r\n        <Link to={`/products/${item.productId}`}>\r\n        <Product\r\n        title={item.name} \r\n        image={item.photoUrl} \r\n        purchasePrice={item.purchasePrice}/>\r\n        </Link>\r\n        </div>\r\n        </SwiperSlide>\r\n    })\r\n    }\r\n\r\n    function purchaseAlert(){\r\n        document.querySelector('.purchase-alert').style.display = 'block'\r\n        document.querySelector('.alert-overlay').style.display = 'block'\r\n    }\r\n\r\n    function cancelPurchase(){\r\n        document.querySelector('.purchase-alert').style.display = 'none'\r\n        document.querySelector('.alert-overlay').style.display = 'none'\r\n    }\r\n\r\n    function biddingAlert(productId){\r\n        document.querySelector('.bidding-alert').style.display = 'block'\r\n        document.querySelector('.alert-overlay').style.display = 'block'\r\n        props.placeBid(productId)\r\n        setTimeout(function(){\r\n            navigate('/profile')\r\n        }, 1000)\r\n    }\r\n\r\n    const navigate = useNavigate()\r\n\r\n    function confirmPurchase(){\r\n        // document.querySelector('.alert-title').innerText = 'Thank you for your purchase!'\r\n        document.querySelector('.cancel').style.display = 'none'\r\n        document.querySelector('.confirm').style.display = 'none'\r\n        props.purchase(productId)\r\n        setTimeout(function(){\r\n            navigate('/profile')\r\n        }, 1000)\r\n    }\r\n\r\n    if(productPage != undefined){\r\n    return (\r\n        <div className=\"single-product\">\r\n\r\n            <div className=\"alert-overlay\"></div>\r\n\r\n            <div className=\"product-informations\">\r\n                <div className=\"product-img\">\r\n                <Link to=\"/\">Back to Home Page</Link>\r\n                <h1>{productPage.name}</h1>\r\n                <img src={productPage.photoUrl} alt={productPage.name} />\r\n                </div>\r\n\r\n                <div className=\"product-details\">\r\n                <Link to={productPage.uploader === localStorage.getItem('username') ? '/profile' : `/user/${productPage.uploader}`} className=\"user-link\">Uploaded by: {productPage.uploader}</Link>\r\n                <h3 className=\"description\">Description</h3>\r\n\r\n                <p>{productPage.description}</p>\r\n                <h3>{productPage.expiresAt && \"Auction ends at: \" + productPage.expiresAt}</h3>\r\n                <h3>{productPage.startingPrice && \"Staring Price: $\" + productPage.startingPrice}</h3>\r\n                <div className=\"bidding-section\">\r\n                    {productPage.startingPrice && <input type=\"number\" placeholder=\"Amount of bid\" id=\"bidAmount\" />}\r\n                    {productPage.startingPrice && <button className=\"bidding-btn\" onClick={() => biddingAlert(productId)}>Place your bid</button>}\r\n                </div>\r\n\r\n                <div className=\"bidding-alert\">\r\n                    <h1 className=\"alert-title\">{props.placeBid.message}</h1>\r\n                </div>\r\n\r\n                <h3>Purchase Price: ${productPage.purchasePrice}</h3>\r\n                <button className=\"purchase-btn\" onClick={purchaseAlert}>Purchase</button>\r\n\r\n                <div className=\"purchase-alert\">\r\n                    <h1 className=\"alert-title\">Are you sure you want to purchase {productPage.name} ?</h1>\r\n                    <button className=\"cancel\" onClick={cancelPurchase}>Cancel</button>\r\n                    <button className=\"confirm\" onClick={confirmPurchase}>Confirm</button>\r\n                </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <Swiper\r\n                className=\"swiper\"\r\n                spaceBetween={50}\r\n                breakpoints={{\r\n                    0: {\r\n                        slidesPerView: 1\r\n                    },\r\n                    500: {\r\n                        slidesPerView: 3\r\n                    },\r\n                    1000: {\r\n                        slidesPerView: 4\r\n                    }\r\n                }}\r\n            >\r\n                {moreItems}\r\n            </Swiper>\r\n\r\n        </div>\r\n    )\r\n    }\r\n}","D:\\Dolgaim\\Programozás\\Deployment\\Greenbay\\GreenbayFrontend\\my-app\\src\\components\\UploaderProfile.js",["75","76"],[],"import Login from \"./Login\"\r\nimport { useState, useEffect } from \"react\"\r\nimport { useParams, Link } from \"react-router-dom\"\r\n\r\nexport default function UploaderProfile(props){\r\n\r\n  const [uploaderProfile, setUploaderProfile] = useState()\r\n\r\n  const { username } = useParams()\r\n\r\n  /* When the user clicks on the uploaders name, it collects that user's data and saves it to uploaderProfile state */\r\n  async function displayUploader(){\r\n    const res = await fetch(`https://greenbaybackend-production.up.railway.app/user-profile/${username}`)\r\n    const data = await res.json()\r\n    setUploaderProfile(data)\r\n  }\r\n\r\n  useEffect(() => {\r\n    displayUploader()\r\n  }, [])\r\n\r\n  let uploaderInformations\r\n\r\n  /* Displays a user's informations */\r\n  if(uploaderProfile){\r\n    uploaderInformations = <div>\r\n      <h1>{uploaderProfile.username}'s Profile</h1>\r\n      <h4>{uploaderProfile.email}</h4>\r\n      <h3>{uploaderProfile.username}'s active items ({uploaderProfile.productsCount})</h3>\r\n    </div>\r\n  }\r\n\r\n  let uploadersProducts\r\n\r\n  const [visible, setVisible] = useState(4)\r\n  function showMoreItems(){\r\n      const btn = document.querySelector('.show-more')\r\n      if(visible === 4){\r\n          setVisible(uploaderProfile.products.length)\r\n          btn.innerText = \"Show less items\"\r\n      } else {\r\n          setVisible(4)\r\n          btn.innerText = \"Show all items\"\r\n      }\r\n  }\r\n\r\n  /* Displays a user's uploaded products */\r\n  if(uploaderProfile){\r\n    uploadersProducts = uploaderProfile.products.slice(0, visible).map(function(item){\r\n        return <div className=\"product\" key={item.productId}>\r\n            <Link to={`/products/${item.productId}`}>\r\n            <div className=\"product-img\">\r\n                <img src={item.photoUrl} alt=\"\" />\r\n            </div>\r\n            <div className=\"product-text\">\r\n            <h3>{item.name}</h3>\r\n            </div>\r\n            </Link>\r\n        </div>\r\n    })\r\n}\r\n\r\n    return (\r\n        <div className=\"uploader-profile\">\r\n          {uploaderInformations}\r\n          <div className=\"products\">\r\n            {uploadersProducts}\r\n          </div>\r\n          <button className=\"show-more\" onClick={showMoreItems}>Show more items</button>\r\n        </div>\r\n    )\r\n}","D:\\Dolgaim\\Programozás\\Deployment\\Greenbay\\GreenbayFrontend\\my-app\\src\\components\\Product.js",["77","78"],[],"import { Link } from \"react-router-dom\"\r\n\r\nexport default function Product(props){\r\n    return(\r\n        <div className=\"product\">\r\n\r\n            <div className=\"product-img\">\r\n                <img src={props.image} />\r\n            </div>\r\n\r\n            <div className=\"product-text\">\r\n                <h3>{props.title}</h3>\r\n                <h4>Purchasing Price:</h4>\r\n                <h4>${props.purchasePrice}</h4>\r\n                <h4>{props.startingPrice && \"Starting Price:\"}</h4>\r\n                <h4>{props.startingPrice && \"$\" + props.startingPrice}</h4>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}",{"ruleId":"79","severity":1,"message":"80","line":2,"column":20,"nodeType":"81","messageId":"82","endLine":2,"endColumn":29},{"ruleId":"79","severity":1,"message":"83","line":73,"column":11,"nodeType":"81","messageId":"82","endLine":73,"endColumn":15},{"ruleId":"79","severity":1,"message":"83","line":129,"column":11,"nodeType":"81","messageId":"82","endLine":129,"endColumn":15},{"ruleId":"84","severity":1,"message":"85","line":9,"column":10,"nodeType":"86","endLine":9,"endColumn":12,"suggestions":"87"},{"ruleId":"79","severity":1,"message":"88","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":18},{"ruleId":"84","severity":1,"message":"89","line":17,"column":4,"nodeType":"86","endLine":17,"endColumn":21,"suggestions":"90"},{"ruleId":"84","severity":1,"message":"85","line":8,"column":8,"nodeType":"86","endLine":8,"endColumn":10,"suggestions":"91"},{"ruleId":"79","severity":1,"message":"92","line":33,"column":15,"nodeType":"81","messageId":"82","endLine":33,"endColumn":22},{"ruleId":"79","severity":1,"message":"83","line":142,"column":19,"nodeType":"81","messageId":"82","endLine":142,"endColumn":23},{"ruleId":"93","severity":1,"message":"94","line":299,"column":65,"nodeType":"95","messageId":"96","endLine":299,"endColumn":67},{"ruleId":"93","severity":1,"message":"94","line":300,"column":61,"nodeType":"95","messageId":"96","endLine":300,"endColumn":63},{"ruleId":"93","severity":1,"message":"94","line":301,"column":55,"nodeType":"95","messageId":"96","endLine":301,"endColumn":57},{"ruleId":"79","severity":1,"message":"97","line":6,"column":8,"nodeType":"81","messageId":"82","endLine":6,"endColumn":13},{"ruleId":"84","severity":1,"message":"98","line":23,"column":8,"nodeType":"86","endLine":23,"endColumn":19,"suggestions":"99"},{"ruleId":"93","severity":1,"message":"100","line":27,"column":20,"nodeType":"95","messageId":"96","endLine":27,"endColumn":22},{"ruleId":"93","severity":1,"message":"100","line":73,"column":20,"nodeType":"95","messageId":"96","endLine":73,"endColumn":22},{"ruleId":"79","severity":1,"message":"97","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":13},{"ruleId":"84","severity":1,"message":"101","line":20,"column":6,"nodeType":"86","endLine":20,"endColumn":8,"suggestions":"102"},{"ruleId":"79","severity":1,"message":"103","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":14},{"ruleId":"104","severity":1,"message":"105","line":8,"column":17,"nodeType":"106","endLine":8,"endColumn":42},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["107"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'navigate', 'props.formData.password', and 'props.formData.username'. Either include them or remove the dependency array.",["108"],["109"],"'checked' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Login' is defined but never used.","React Hook useEffect has a missing dependency: 'singlePageProduct'. Either include it or remove the dependency array.",["110"],"Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'displayUploader'. Either include it or remove the dependency array.",["111"],"'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"112","fix":"113"},{"desc":"114","fix":"115"},{"desc":"112","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [props]",{"range":"121","text":"122"},"Update the dependencies array to be: [navigate, props.formData.password, props.formData.username, props.loginData]",{"range":"123","text":"124"},{"range":"125","text":"122"},"Update the dependencies array to be: [productId, singlePageProduct]",{"range":"126","text":"127"},"Update the dependencies array to be: [displayUploader]",{"range":"128","text":"129"},[221,223],"[props]",[646,663],"[navigate, props.formData.password, props.formData.username, props.loginData]",[217,219],[848,859],"[productId, singlePageProduct]",[664,666],"[displayUploader]"]